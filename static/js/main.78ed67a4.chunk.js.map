{"version":3,"sources":["serviceWorker.js","reducers/todo.js","actions/index.js","reducers/visibilityFilter.js","reducers/index.js","components/header/header.js","components/tasks/tasks.js","components/todoApp/todoApp.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","todos","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","key","name","completed","updatedTodo","map","todo","filter","VisibilityFilters","visibilityFilter","combineReducers","Header","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSearchSubmit","bind","assertThisInitialized","handleSearchChange","event","preventDefault","e","value","target","searchInput","react_default","a","createElement","className","onSubmit","placeholder","onChange","React","Component","Tasks","_React$Component","createList","deleteTask","inherits","createClass","editTask","editTaskStatus","item","_this2","date","Date","toLocaleString","onClick","aria-hidden","confirm","taskItems","tasks","TodoApp","categoryFiltered","searchFiltered","currentTask","isSearching","searchCategory","_inputElement","addTasks","handleSubmit","handleTaskCategoryClick","searchInputData","getTasksToDisplay","taskName","slice","task","now","setState","filteredTasks","find","updatedTask","regex","RegExp","inputSearchData","test","completedStatus","addEditedTask","Fragment","ref","startsWith","tasks_Tasks","App","todoAppRef","createRef","current","header_header","todoApp_TodoApp","store","createStore","rootReducer","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.78ed67a4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const todos = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state,\n        {\n          key: action.key,\n          name: action.name,\n          completed: action.completed,\n        }\n      ];\n\n    case 'EDIT_TODO':\n      let updatedTodo = {\n        name: action.name,\n        key: action.key,\n      };\n\n      return state.map((todo) => {\n        if (todo.key === action.key) { return updatedTodo; }\n        else { return todo; }\n      });\n\n    case 'EDIT_STATUS':\n      return state.map((todo) => {\n        if (todo.key === action.key) { \n          todo.completed = !todo.completed; \n        }\n        return todo;\n      });\n\n    case 'REMOVE_TODO':\n      return state.filter((todo) => {\n        return todo.key !== action.key;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n","export const addTodo = name => ({\n  type: 'ADD_TODO',\n  key: Date.now(),\n  completed: false,\n  name,\n});\n\nexport const editTodo = (key, updatedName) => ({\n  type: 'EDIT_TODO',\n  key,\n  name: updatedName,\n});\n\nexport const editStatus = (key) => ({\n  type: 'EDIT_STATUS',\n  key,\n});\n\nexport const removeTodo = key => ({\n  type: 'REMOVE_TODO',\n  key\n});\n\nexport const setVisibilityFilter = filter => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter\n});\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_PENDING: 'SHOW_PENDING',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n};\n","import { VisibilityFilters } from '../actions/index';\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter;\n\n    default:\n      return state;\n  }\n};\n\nexport default visibilityFilter;\n","import { combineReducers } from 'redux';\nimport todos from './todo';\nimport visibilityFilter from './visibilityFilter';\n\nexport default combineReducers({\n  todos,\n  visibilityFilter,\n});\n","import React from 'react';\nimport './header.css';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSearchSubmit = this.handleSearchSubmit.bind(this);\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n  }\n\n  handleSearchSubmit(event) {\n    event.preventDefault();\n  }\n\n  handleSearchChange(e) {\n    let value = e.target.value;\n    this.props.searchInput(value);\n  }\n\n  render() {\n    return (\n      <header className=\" header\">\n        <div className=\"page-content\">\n          <h1>TODO APP</h1>\n\n          <form onSubmit={this.handleSearchSubmit} className=\"search-form clearfix\">\n            <input type=\"text\"\n              placeholder=\"Search\"\n              onChange={this.handleSearchChange}\n              className=\"search-box\" />\n          </form>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport './tasks.css';\n\nexport class Tasks extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.createList = this.createList.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n  }\n\n  deleteTask(key) {\n    //calls parent delete function\n    this.props.deleteTask(key);\n  }\n\n  editTask(key) {\n    this.props.editTask(key);\n  }\n\n  editTaskStatus(key) {\n    this.props.editTaskStatus(key);\n  }\n\n  createList(item) {\n    let date = new Date(item.key).toLocaleString();\n    return (\n      <li key={item.key}\n        className=\"clearfix\">\n        <span className=\"task-status\"\n          onClick={() => { this.editTaskStatus(item.key); }}>\n          {\n            item.completed ?\n              <i className=\"fa fa-check-circle\" aria-hidden=\"true\"></i> :\n              <i className=\"fa fa-circle-thin\" aria-hidden=\"true\"></i>\n          }\n        </span>\n        <div className=\"task\">\n          <h2 className={item.completed ? 'task-completed' : null}>{item.name}</h2>\n          <span>Date Added: {date}</span>\n        </div>\n        <button\n          className=\"remove-task\"\n          onClick={() => {\n            if (window.confirm('Are you sure you wish to delete this item?')) {\n              this.deleteTask(item.key);\n            }\n          }\n          }>\n          <i className=\"fa fa-trash\"></i>\n        </button>\n        <button\n          className=\"edit-task\"\n          onClick={() => { this.editTask(item.key); }}>\n          <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\n        </button>\n      </li>\n    );\n  }\n\n  render() {\n    let tasksEntries = this.props.tasks;\n    let taskItems = tasksEntries.map(this.createList);\n\n    let output;\n    if (taskItems.length > 0)\n      output = <ul className=\"tasks\">\n        {taskItems}\n      </ul>;\n    else {\n      output = <div className=\"empty-list\">There is No Task In List</div>;\n    }\n\n    return (\n      output\n    );\n  }\n}\n","import React from 'react';\r\nimport { Tasks } from '../tasks/tasks';\r\nimport './todoApp.css';\r\n\r\nexport class TodoApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: [],\r\n      categoryFiltered: [],\r\n      searchFiltered: [],\r\n      currentTask: null,\r\n      isSearching: false,\r\n      searchCategory: 'all'\r\n    };\r\n\r\n    //later in form will be referenced\r\n    this._inputElement = null;\r\n\r\n    //handle scoping of this\r\n    this.addTasks = this.addTasks.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.deleteTask = this.deleteTask.bind(this);\r\n    this.editTaskStatus = this.editTaskStatus.bind(this);\r\n    this.editTask = this.editTask.bind(this);\r\n    this.handleTaskCategoryClick = this.handleTaskCategoryClick.bind(this);\r\n    this.searchInputData = this.searchInputData.bind(this);\r\n    this.getTasksToDisplay = this.getTasksToDisplay.bind(this);\r\n  }\r\n\r\n  addTasks(taskName) {\r\n    let tasks = this.state.tasks.slice(0);\r\n\r\n    let task = {\r\n      name: taskName,\r\n      key: Date.now(),\r\n      completed: false,\r\n    };\r\n\r\n    this.setState({\r\n      tasks: tasks.concat(task),\r\n    }, this.handleTaskCategoryClick);\r\n  }\r\n\r\n  deleteTask(key) {\r\n    let filteredTasks = this.state.tasks.filter((task) => {\r\n      return task.key !== key;\r\n    });\r\n\r\n    this.setState({\r\n      tasks: filteredTasks,\r\n    }, this.handleTaskCategoryClick);\r\n  }\r\n\r\n  editTaskStatus(key) {\r\n    let tasks = this.state.tasks.map((task) => {\r\n      if (task.key === key) {\r\n        task.completed = !task.completed;\r\n      }\r\n      return task;\r\n    });\r\n\r\n    this.setState({\r\n      tasks: tasks,\r\n    }, this.handleTaskCategoryClick);\r\n  }\r\n\r\n  editTask(key) {\r\n    let currentTask = this.state.tasks.find((task) => {\r\n      return task.key === key;\r\n    });\r\n\r\n    this.setState({\r\n      currentTask: currentTask,\r\n    });\r\n\r\n    this._inputElement.value = currentTask.name;\r\n  }\r\n\r\n  addEditedTask(taskName) {\r\n    let updatedTask = {\r\n      name: taskName,\r\n      key: this.state.currentTask.key,\r\n      completed: this.state.currentTask.completed,\r\n    };\r\n\r\n    let filteredTasks = this.state.tasks.map((task) => {\r\n      if (task.key === updatedTask.key) {\r\n        return updatedTask;\r\n      }\r\n      else {\r\n        return task;\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      currentTask: null,\r\n      tasks: filteredTasks,\r\n    }, this.handleTaskCategoryClick);\r\n  }\r\n\r\n  searchInputData() {\r\n    let regex = new RegExp(this.props.inputSearchData, 'i');\r\n    let searchFiltered = this.state.categoryFiltered.filter((task) => {\r\n      return regex.test(task.name);\r\n    });\r\n    let isSearching = this.props.inputSearchData.length > 0 ? true : false;\r\n    this.setState({\r\n      searchFiltered: searchFiltered,\r\n      isSearching: isSearching,\r\n    });\r\n  }\r\n\r\n  handleTaskCategoryClick(completedStatus) {\r\n    let searchCategory = null;\r\n\r\n    if (completedStatus === undefined) {\r\n      searchCategory = 'all';\r\n    }\r\n    if (completedStatus === false) {\r\n      searchCategory = 'pending';\r\n    }\r\n    if (completedStatus === true) {\r\n      searchCategory = 'completed';\r\n    }\r\n\r\n    let categoryFiltered = this.state.tasks.filter((task) => {\r\n      if (completedStatus === undefined) {\r\n        return task;\r\n      }\r\n      return completedStatus === task.completed;\r\n    });\r\n\r\n    this.setState({\r\n      categoryFiltered: categoryFiltered,\r\n      searchCategory: searchCategory,\r\n    }, this.searchInputData);\r\n  }\r\n\r\n  getTasksToDisplay() {\r\n    if (this.state.isSearching) {\r\n      return this.state.searchFiltered;\r\n    }\r\n    return this.state.categoryFiltered;\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    //prevent reloading\r\n    event.preventDefault();\r\n\r\n    //only take input if there is no whitespace\r\n    if (/\\S/.test(this._inputElement.value)) {\r\n      if (this.state.currentTask) {\r\n        this.addEditedTask(this._inputElement.value);\r\n      }\r\n      else {\r\n        this.addTasks(this._inputElement.value);\r\n      }\r\n      this._inputElement.value = '';\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"page-content task-content\">\r\n          <form onSubmit={this.handleSubmit} className=\"clearfix\">\r\n            <input type=\"text\"\r\n              placeholder={this.state.currentTask ? \"Update Task\" : \"Enter Task\"}\r\n              ref={(a) => this._inputElement = a} />\r\n            <button type=\"submit\">\r\n              {this.state.currentTask ? <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i> : <i className=\"fa fa-plus-circle\" aria-hidden=\"true\">\r\n              </i>}\r\n            </button>\r\n          </form>\r\n\r\n          <div className=\"task-tab clearfix\">\r\n            <button className={this.state.searchCategory.startsWith('all') ? \"active\" : null} onClick={() => this.handleTaskCategoryClick()}>All Tasks</button>\r\n            <button className={this.state.searchCategory.startsWith('pending') ? \"active\" : null} onClick={() => this.handleTaskCategoryClick(false)}>Pending</button>\r\n            <button className={this.state.searchCategory.startsWith('completed') ? \"active\" : null} onClick={() => this.handleTaskCategoryClick(true)}>Completed</button>\r\n          </div>\r\n\r\n          <Tasks tasks={this.getTasksToDisplay()}\r\n            editTaskStatus={this.editTaskStatus}\r\n            deleteTask={this.deleteTask}\r\n            editTask={this.editTask} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/header/header';\nimport { TodoApp } from './components/todoApp/todoApp';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputSearchData: '',\n    };\n    this.todoAppRef = React.createRef();\n    this.searchInput = this.searchInput.bind(this);\n  }\n\n  searchInput(inputSearchData) {\n    this.setState({\n      inputSearchData: inputSearchData,\n    }, this.todoAppRef.current.searchInputData);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header searchInput={this.searchInput} />\n        <TodoApp\n          inputSearchData={this.state.inputSearchData}\n          ref={this.todoAppRef} />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport * as serviceWorker from './serviceWorker';\n\nimport rootReducer from './reducers/index';\nimport './assets/css/reset.css';\nimport './index.css';\nimport App from './App';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}