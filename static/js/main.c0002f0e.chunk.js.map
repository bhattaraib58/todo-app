{"version":3,"sources":["serviceWorker.js","reducers/todo.js","actions/index.js","reducers/visibilityFilter.js","reducers/index.js","components/header/header.js","components/tasks/tasks.js","components/todoApp/todoApp.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","todos","state","action","type","key","name","completed","map","todo","filter","VisibilityFilters","visibilityFilter","combineReducers","Header","props","handleSearchSubmit","bind","handleSearchChange","event","preventDefault","e","value","target","this","searchInput","className","onSubmit","placeholder","onChange","React","Component","Tasks","createList","deleteTask","editTask","editTaskStatus","item","date","Date","toLocaleString","onClick","aria-hidden","confirm","taskItems","tasks","length","TodoApp","categoryFiltered","searchFiltered","currentTask","isSearching","searchCategory","_inputElement","addTasks","handleSubmit","handleTaskCategoryClick","searchInputData","getTasksToDisplay","taskName","slice","task","now","setState","concat","filteredTasks","find","updatedTask","regex","RegExp","inputSearchData","test","completedStatus","undefined","addEditedTask","ref","a","startsWith","App","todoAppRef","createRef","current","store","createStore","rootReducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c0002f0e.chunk.js","sourcesContent":["/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n\n      if (response.status === 404 || (contentType !== null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","const todos = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state,\n        {\n          key: action.key,\n          name: action.name,\n          completed: action.completed\n        }\n      ];\n\n    case 'EDIT_TODO':\n      return state.map((todo) => {\n        if (todo.key === action.key) {\n          const updatedTodo = {\n            name: action.name,\n            key: action.key\n          };\n\n          return updatedTodo;\n        } else {\n          return todo;\n        }\n      });\n\n    case 'EDIT_STATUS':\n      return state.map((todo) => {\n        if (todo.key === action.key) {\n          todo.completed = !todo.completed;\n        }\n\n        return todo;\n      });\n\n    case 'REMOVE_TODO':\n      return state.filter((todo) => {\n        return todo.key !== action.key;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n","export const addTodo = (name) => ({\n  type: 'ADD_TODO',\n  key: Date.now(),\n  completed: false,\n  name\n});\n\nexport const editTodo = (key, updatedName) => ({\n  type: 'EDIT_TODO',\n  key,\n  name: updatedName\n});\n\nexport const editStatus = (key) => ({\n  type: 'EDIT_STATUS',\n  key\n});\n\nexport const removeTodo = (key) => ({\n  type: 'REMOVE_TODO',\n  key\n});\n\nexport const setVisibilityFilter = (filter) => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter\n});\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_PENDING: 'SHOW_PENDING',\n  SHOW_COMPLETED: 'SHOW_COMPLETED'\n};\n","import { VisibilityFilters } from '../actions/index';\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter;\n\n    default:\n      return state;\n  }\n};\n\nexport default visibilityFilter;\n","import { combineReducers } from 'redux';\nimport todos from './todo';\nimport visibilityFilter from './visibilityFilter';\n\nexport default combineReducers({\n  todos,\n  visibilityFilter\n});\n","import React from 'react';\nimport './header.css';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSearchSubmit = this.handleSearchSubmit.bind(this);\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n  }\n\n  handleSearchSubmit(event) {\n    event.preventDefault();\n  }\n\n  handleSearchChange(e) {\n    const value = e.target.value;\n\n    this.props.searchInput(value);\n  }\n\n  render() {\n    return (\n      <header className=\" header\">\n        <div className=\"page-content\">\n          <h1>TODO APP</h1>\n\n          <form onSubmit={this.handleSearchSubmit} className=\"search-form clearfix\">\n            <input type=\"text\" placeholder=\"Search\" onChange={this.handleSearchChange} className=\"search-box\" />\n          </form>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport './tasks.css';\n\nexport class Tasks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.createList = this.createList.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n  }\n\n  deleteTask(key) {\n    // calls parent delete function\n    this.props.deleteTask(key);\n  }\n\n  editTask(key) {\n    this.props.editTask(key);\n  }\n\n  editTaskStatus(key) {\n    this.props.editTaskStatus(key);\n  }\n\n  createList(item) {\n    const date = new Date(item.key).toLocaleString();\n\n    return (\n      <li key={item.key} className=\"clearfix\">\n        <span\n          className=\"task-status\"\n          onClick={() => {\n            this.editTaskStatus(item.key);\n          }}\n        >\n          {item.completed ? (\n            <i className=\"fa fa-check-circle\" aria-hidden=\"true\"></i>\n          ) : (\n            <i className=\"fa fa-circle-thin\" aria-hidden=\"true\"></i>\n          )}\n        </span>\n        <div className=\"task\">\n          <h2 className={item.completed ? 'task-completed' : null}>{item.name}</h2>\n          <span>Date Added: {date}</span>\n        </div>\n        <button\n          className=\"remove-task\"\n          onClick={() => {\n            if (window.confirm('Are you sure you wish to delete this item?')) {\n              this.deleteTask(item.key);\n            }\n          }}\n        >\n          <i className=\"fa fa-trash\"></i>\n        </button>\n        <button\n          className=\"edit-task\"\n          onClick={() => {\n            this.editTask(item.key);\n          }}\n        >\n          <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\n        </button>\n      </li>\n    );\n  }\n\n  render() {\n    const tasksEntries = this.props.tasks;\n    const taskItems = tasksEntries.map(this.createList);\n\n    let output;\n\n    if (taskItems.length > 0) output = <ul className=\"tasks\">{taskItems}</ul>;\n    else {\n      output = <div className=\"empty-list\">There is No Task In List</div>;\n    }\n\n    return output;\n  }\n}\n","import React from 'react';\nimport { Tasks } from '../tasks/tasks';\nimport './todoApp.css';\n\nexport class TodoApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      categoryFiltered: [],\n      searchFiltered: [],\n      currentTask: null,\n      isSearching: false,\n      searchCategory: 'all'\n    };\n\n    // later in form will be referenced\n    this._inputElement = null;\n\n    // handle scoping of this\n    this.addTasks = this.addTasks.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.editTaskStatus = this.editTaskStatus.bind(this);\n    this.editTask = this.editTask.bind(this);\n    this.handleTaskCategoryClick = this.handleTaskCategoryClick.bind(this);\n    this.searchInputData = this.searchInputData.bind(this);\n    this.getTasksToDisplay = this.getTasksToDisplay.bind(this);\n  }\n\n  addTasks(taskName) {\n    const tasks = this.state.tasks.slice(0);\n\n    const task = {\n      name: taskName,\n      key: Date.now(),\n      completed: false\n    };\n\n    this.setState(\n      {\n        tasks: tasks.concat(task)\n      },\n      this.handleTaskCategoryClick\n    );\n  }\n\n  deleteTask(key) {\n    const filteredTasks = this.state.tasks.filter((task) => {\n      return task.key !== key;\n    });\n\n    this.setState(\n      {\n        tasks: filteredTasks\n      },\n      this.handleTaskCategoryClick\n    );\n  }\n\n  editTaskStatus(key) {\n    const tasks = this.state.tasks.map((task) => {\n      if (task.key === key) {\n        task.completed = !task.completed;\n      }\n\n      return task;\n    });\n\n    this.setState(\n      {\n        tasks: tasks\n      },\n      this.handleTaskCategoryClick\n    );\n  }\n\n  editTask(key) {\n    const currentTask = this.state.tasks.find((task) => {\n      return task.key === key;\n    });\n\n    this.setState({\n      currentTask: currentTask\n    });\n\n    this._inputElement.value = currentTask.name;\n  }\n\n  addEditedTask(taskName) {\n    const updatedTask = {\n      name: taskName,\n      key: this.state.currentTask.key,\n      completed: this.state.currentTask.completed\n    };\n\n    const filteredTasks = this.state.tasks.map((task) => {\n      if (task.key === updatedTask.key) {\n        return updatedTask;\n      } else {\n        return task;\n      }\n    });\n\n    this.setState(\n      {\n        currentTask: null,\n        tasks: filteredTasks\n      },\n      this.handleTaskCategoryClick\n    );\n  }\n\n  searchInputData() {\n    const regex = new RegExp(this.props.inputSearchData, 'i');\n    const searchFiltered = this.state.categoryFiltered.filter((task) => {\n      return regex.test(task.name);\n    });\n    const isSearching = this.props.inputSearchData.length > 0 ? true : false;\n\n    this.setState({\n      searchFiltered: searchFiltered,\n      isSearching: isSearching\n    });\n  }\n\n  handleTaskCategoryClick(completedStatus) {\n    let searchCategory = null;\n\n    if (completedStatus === undefined) {\n      searchCategory = 'all';\n    }\n    if (completedStatus === false) {\n      searchCategory = 'pending';\n    }\n    if (completedStatus === true) {\n      searchCategory = 'completed';\n    }\n\n    const categoryFiltered = this.state.tasks.filter((task) => {\n      if (completedStatus === undefined) {\n        return task;\n      }\n\n      return completedStatus === task.completed;\n    });\n\n    this.setState(\n      {\n        categoryFiltered: categoryFiltered,\n        searchCategory: searchCategory\n      },\n      this.searchInputData\n    );\n  }\n\n  getTasksToDisplay() {\n    if (this.state.isSearching) {\n      return this.state.searchFiltered;\n    }\n\n    return this.state.categoryFiltered;\n  }\n\n  handleSubmit(event) {\n    // prevent reloading\n    event.preventDefault();\n\n    // only take input if there is no whitespace\n    if (/\\S/.test(this._inputElement.value)) {\n      if (this.state.currentTask) {\n        this.addEditedTask(this._inputElement.value);\n      } else {\n        this.addTasks(this._inputElement.value);\n      }\n      this._inputElement.value = '';\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"page-content task-content\">\n          <form onSubmit={this.handleSubmit} className=\"clearfix\">\n            <input\n              type=\"text\"\n              placeholder={this.state.currentTask ? 'Update Task' : 'Enter Task'}\n              ref={(a) => (this._inputElement = a)}\n            />\n            <button type=\"submit\">\n              {this.state.currentTask ? (\n                <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n              ) : (\n                <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\n              )}\n            </button>\n          </form>\n\n          <div className=\"task-tab clearfix\">\n            <button\n              className={this.state.searchCategory.startsWith('all') ? 'active' : null}\n              onClick={() => this.handleTaskCategoryClick()}\n            >\n              All Tasks\n            </button>\n            <button\n              className={this.state.searchCategory.startsWith('pending') ? 'active' : null}\n              onClick={() => this.handleTaskCategoryClick(false)}\n            >\n              Pending\n            </button>\n            <button\n              className={this.state.searchCategory.startsWith('completed') ? 'active' : null}\n              onClick={() => this.handleTaskCategoryClick(true)}\n            >\n              Completed\n            </button>\n          </div>\n\n          <Tasks\n            tasks={this.getTasksToDisplay()}\n            editTaskStatus={this.editTaskStatus}\n            deleteTask={this.deleteTask}\n            editTask={this.editTask}\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport Header from './components/header/header';\nimport { TodoApp } from './components/todoApp/todoApp';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputSearchData: ''\n    };\n    this.todoAppRef = React.createRef();\n    this.searchInput = this.searchInput.bind(this);\n  }\n\n  searchInput(inputSearchData) {\n    this.setState(\n      {\n        inputSearchData: inputSearchData\n      },\n      this.todoAppRef.current.searchInputData\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header searchInput={this.searchInput} />\n        <TodoApp inputSearchData={this.state.inputSearchData} ref={this.todoAppRef} />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport * as serviceWorker from './serviceWorker';\n\nimport rootReducer from './reducers/index';\nimport './assets/css/reset.css';\nimport './index.css';\nimport App from './App';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}